// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcTrendlog.Models;

namespace MvcTrendlog.Migrations
{
    [DbContext(typeof(MvcTrendlogContext))]
    partial class MvcTrendlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MvcTrendlog.Models.AuthorModel", b =>
                {
                    b.Property<int>("AuthorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Earnings");

                    b.Property<string>("FilePath");

                    b.Property<string>("Name");

                    b.Property<string>("Title");

                    b.HasKey("AuthorID");

                    b.ToTable("AuthorModel");
                });

            modelBuilder.Entity("MvcTrendlog.Models.TrendlogApiModel+Alarmsettings", b =>
                {
                    b.Property<string>("alarmid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("email");

                    b.HasKey("alarmid");

                    b.ToTable("AlarmSettingModel");
                });

            modelBuilder.Entity("MvcTrendlog.Models.TrendlogApiModel+Channel", b =>
                {
                    b.Property<string>("channel_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("alarmsettingsalarmid");

                    b.Property<string>("created");

                    b.Property<string>("description");

                    b.Property<string>("elevation");

                    b.Property<string>("latitude");

                    b.Property<string>("lifetime");

                    b.Property<string>("longitude");

                    b.Property<string>("maxsize");

                    b.Property<string>("name");

                    b.Property<string>("pcount");

                    b.Property<string>("timezone");

                    b.Property<string>("updated");

                    b.HasKey("channel_id");

                    b.HasIndex("alarmsettingsalarmid");

                    b.ToTable("ChannelModel");
                });

            modelBuilder.Entity("MvcTrendlog.Models.TrendlogApiModel+Feed", b =>
                {
                    b.Property<string>("feed_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("alarm");

                    b.Property<string>("alarm_settings");

                    b.Property<string>("channel_id");

                    b.Property<string>("enable_alarm");

                    b.Property<string>("label");

                    b.Property<string>("name");

                    b.Property<string>("scale");

                    b.HasKey("feed_id");

                    b.HasIndex("channel_id");

                    b.ToTable("FeedModel");
                });

            modelBuilder.Entity("MvcTrendlog.Models.TrendlogApiModel+Point", b =>
                {
                    b.Property<string>("pointid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("feed_id");

                    b.Property<string>("timestamp");

                    b.Property<string>("value");

                    b.HasKey("pointid");

                    b.HasIndex("feed_id");

                    b.ToTable("PointModel");
                });

            modelBuilder.Entity("MvcTrendlog.Models.TrendlogApiModel+RootObject", b =>
                {
                    b.Property<string>("rootObjectid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("channel_id");

                    b.HasKey("rootObjectid");

                    b.HasIndex("channel_id");

                    b.ToTable("RootObjectModel");
                });

            modelBuilder.Entity("MvcTrendlog.Models.TrendlogApiModel+Channel", b =>
                {
                    b.HasOne("MvcTrendlog.Models.TrendlogApiModel+Alarmsettings", "alarmsettings")
                        .WithMany()
                        .HasForeignKey("alarmsettingsalarmid");
                });

            modelBuilder.Entity("MvcTrendlog.Models.TrendlogApiModel+Feed", b =>
                {
                    b.HasOne("MvcTrendlog.Models.TrendlogApiModel+Channel")
                        .WithMany("feeds")
                        .HasForeignKey("channel_id");
                });

            modelBuilder.Entity("MvcTrendlog.Models.TrendlogApiModel+Point", b =>
                {
                    b.HasOne("MvcTrendlog.Models.TrendlogApiModel+Feed")
                        .WithMany("points")
                        .HasForeignKey("feed_id");
                });

            modelBuilder.Entity("MvcTrendlog.Models.TrendlogApiModel+RootObject", b =>
                {
                    b.HasOne("MvcTrendlog.Models.TrendlogApiModel+Channel", "channel")
                        .WithMany()
                        .HasForeignKey("channel_id");
                });
#pragma warning restore 612, 618
        }
    }
}
