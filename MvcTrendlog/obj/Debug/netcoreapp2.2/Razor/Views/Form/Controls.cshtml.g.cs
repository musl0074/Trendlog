#pragma checksum "C:\Users\Muslim Al Ali\Desktop\Trendlog\MvcTrendlog\Views\Form\Controls.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7f79abd400991c765bb9dd32e54968057be86768"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Form_Controls), @"mvc.1.0.view", @"/Views/Form/Controls.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Form/Controls.cshtml", typeof(AspNetCore.Views_Form_Controls))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Muslim Al Ali\Desktop\Trendlog\MvcTrendlog\Views\_ViewImports.cshtml"
using MvcTrendlog;

#line default
#line hidden
#line 2 "C:\Users\Muslim Al Ali\Desktop\Trendlog\MvcTrendlog\Views\_ViewImports.cshtml"
using MvcTrendlog.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7f79abd400991c765bb9dd32e54968057be86768", @"/Views/Form/Controls.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d12b901470e988a9bd0cb185e315464c07a79499", @"/Views/_ViewImports.cshtml")]
    public class Views_Form_Controls : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/main.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/main.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 34, true);
            WriteLiteral("<!doctype html>\n<html lang=\"en\">\n\n");
            EndContext();
            BeginContext(34, 1312, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be867685975", async() => {
                BeginContext(40, 1254, true);
                WriteLiteral(@"
    <meta charset=""utf-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <meta http-equiv=""Content-Language"" content=""en"">
    <meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8""/>
    <title>Form Controls - Wide selection of forms controls, using the Bootstrap 4 code base, but built with React.</title>
    <meta name=""viewport"" content=""width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, shrink-to-fit=no"" />
    <meta name=""description"" content=""Wide selection of forms controls, using the Bootstrap 4 code base, but built with React."">
    <meta name=""msapplication-tap-highlight"" content=""no"">
    <!--
    =========================================================
    * ArchitectUI HTML Theme Dashboard - v1.0.0
    =========================================================
    * Product Page: https://dashboardpack.com
    * Copyright 2019 DashboardPack (https://dashboardpack.com)
    * Licensed under MIT (https://github.com/DashboardPack/architectui-html-theme");
                WriteLiteral("-free/blob/master/LICENSE)\n    =========================================================\n    * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n    -->\n");
                EndContext();
                BeginContext(1294, 45, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "7f79abd400991c765bb9dd32e54968057be867687675", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1346, 1, true);
            WriteLiteral("\n");
            EndContext();
            BeginContext(1347, 83011, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be867689691", async() => {
                BeginContext(1353, 49078, true);
                WriteLiteral(@"
    <div class=""app-container app-theme-white body-tabs-shadow fixed-sidebar fixed-header"">
        <div class=""app-header header-shadow"">
            <div class=""app-header__logo"">
                <div class=""logo-src""></div>
                <div class=""header__pane ml-auto"">
                    <div>
                        <button type=""button"" class=""hamburger close-sidebar-btn hamburger--elastic"" data-class=""closed-sidebar"">
                            <span class=""hamburger-box"">
                                <span class=""hamburger-inner""></span>
                            </span>
                        </button>
                    </div>
                </div>
            </div>
            <div class=""app-header__mobile-menu"">
                <div>
                    <button type=""button"" class=""hamburger hamburger--elastic mobile-toggle-nav"">
                        <span class=""hamburger-box"">
                            <span class=""hamburger-inner""></span>
                        </span>
  ");
                WriteLiteral(@"                  </button>
                </div>
            </div>
            <div class=""app-header__menu"">
                <span>
                    <button type=""button"" class=""btn-icon btn-icon-only btn btn-primary btn-sm mobile-toggle-header-nav"">
                        <span class=""btn-icon-wrapper"">
                            <i class=""fa fa-ellipsis-v fa-w-6""></i>
                        </span>
                    </button>
                </span>
            </div>    <div class=""app-header__content"">
                <div class=""app-header-left"">
                    <div class=""search-wrapper"">
                        <div class=""input-holder"">
                            <input type=""text"" class=""search-input"" placeholder=""Type to search"">
                            <button class=""search-icon""><span></span></button>
                        </div>
                        <button class=""close""></button>
                    </div>
                    <ul class=""header-menu nav"">
              ");
                WriteLiteral(@"          <li class=""nav-item"">
                            <a href=""javascript:void(0);"" class=""nav-link"">
                                <i class=""nav-link-icon fa fa-database""> </i>
                                Statistics
                            </a>
                        </li>
                        <li class=""btn-group nav-item"">
                            <a href=""javascript:void(0);"" class=""nav-link"">
                                <i class=""nav-link-icon fa fa-edit""></i>
                                Projects
                            </a>
                        </li>
                        <li class=""dropdown nav-item"">
                            <a href=""javascript:void(0);"" class=""nav-link"">
                                <i class=""nav-link-icon fa fa-cog""></i>
                                Settings
                            </a>
                        </li>
                    </ul>        </div>
                <div class=""app-header-right"">
                    <div clas");
                WriteLiteral(@"s=""header-btn-lg pr-0"">
                        <div class=""widget-content p-0"">
                            <div class=""widget-content-wrapper"">
                                <div class=""widget-content-left"">
                                    <div class=""btn-group"">
                                        <a data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"" class=""p-0 btn"">
                                            <img width=""42"" class=""rounded-circle"" src=""assets/images/avatars/1.jpg"" alt="""">
                                            <i class=""fa fa-angle-down ml-2 opacity-8""></i>
                                        </a>
                                        <div tabindex=""-1"" role=""menu"" aria-hidden=""true"" class=""dropdown-menu dropdown-menu-right"">
                                            <button type=""button"" tabindex=""0"" class=""dropdown-item"">User Account</button>
                                            <button type=""button"" tabindex=""0"" class=""dropdown-item"">Setting");
                WriteLiteral(@"s</button>
                                            <h6 tabindex=""-1"" class=""dropdown-header"">Header</h6>
                                            <button type=""button"" tabindex=""0"" class=""dropdown-item"">Actions</button>
                                            <div tabindex=""-1"" class=""dropdown-divider""></div>
                                            <button type=""button"" tabindex=""0"" class=""dropdown-item"">Dividers</button>
                                        </div>
                                    </div>
                                </div>
                                <div class=""widget-content-left  ml-3 header-user-info"">
                                    <div class=""widget-heading"">
                                        Alina Mclourd
                                    </div>
                                    <div class=""widget-subheading"">
                                        VP People Manager
                                    </div>
                                </");
                WriteLiteral(@"div>
                                <div class=""widget-content-right header-user-info ml-3"">
                                    <button type=""button"" class=""btn-shadow p-1 btn btn-primary btn-sm show-toastr-example"">
                                        <i class=""fa text-white fa-calendar pr-1 pl-1""></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>        </div>
            </div>
        </div>        <div class=""ui-theme-settings"">
            <button type=""button"" id=""TooltipDemo"" class=""btn-open-options btn btn-warning"">
                <i class=""fa fa-cog fa-w-16 fa-spin fa-2x""></i>
            </button>
            <div class=""theme-settings__inner"">
                <div class=""scrollbar-container"">
                    <div class=""theme-settings__options-wrapper"">
                        <h3 class=""themeoptions-heading"">Layout Options
                        </h3>
   ");
                WriteLiteral(@"                     <div class=""p-3"">
                            <ul class=""list-group"">
                                <li class=""list-group-item"">
                                    <div class=""widget-content p-0"">
                                        <div class=""widget-content-wrapper"">
                                            <div class=""widget-content-left mr-3"">
                                                <div class=""switch has-switch switch-container-class"" data-class=""fixed-header"">
                                                    <div class=""switch-animate switch-on"">
                                                        <input type=""checkbox"" checked data-toggle=""toggle"" data-onstyle=""success"">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""widget-content-left"">
                                                ");
                WriteLiteral(@"<div class=""widget-heading"">Fixed Header
                                                </div>
                                                <div class=""widget-subheading"">Makes the header top fixed, always visible!
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </li>
                                <li class=""list-group-item"">
                                    <div class=""widget-content p-0"">
                                        <div class=""widget-content-wrapper"">
                                            <div class=""widget-content-left mr-3"">
                                                <div class=""switch has-switch switch-container-class"" data-class=""fixed-sidebar"">
                                                    <div class=""switch-animate switch-on"">
                                                        <inp");
                WriteLiteral(@"ut type=""checkbox"" checked data-toggle=""toggle"" data-onstyle=""success"">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""widget-content-left"">
                                                <div class=""widget-heading"">Fixed Sidebar
                                                </div>
                                                <div class=""widget-subheading"">Makes the sidebar left fixed, always visible!
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </li>
                                <li class=""list-group-item"">
                                    <div class=""widget-content p-0"">
                                        <div class=""widget-content-wrapper""");
                WriteLiteral(@">
                                            <div class=""widget-content-left mr-3"">
                                                <div class=""switch has-switch switch-container-class"" data-class=""fixed-footer"">
                                                    <div class=""switch-animate switch-off"">
                                                        <input type=""checkbox"" data-toggle=""toggle"" data-onstyle=""success"">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""widget-content-left"">
                                                <div class=""widget-heading"">Fixed Footer
                                                </div>
                                                <div class=""widget-subheading"">Makes the app footer bottom fixed, always visible!
                                                </div>
                      ");
                WriteLiteral(@"                      </div>
                                        </div>
                                    </div>
                                </li>
                            </ul>
                        </div>
                        <h3 class=""themeoptions-heading"">
                            <div>
                                Header Options
                            </div>
                            <button type=""button"" class=""btn-pill btn-shadow btn-wide ml-auto btn btn-focus btn-sm switch-header-cs-class"" data-class="""">
                                Restore Default
                            </button>
                        </h3>
                        <div class=""p-3"">
                            <ul class=""list-group"">
                                <li class=""list-group-item"">
                                    <h5 class=""pb-2"">Choose Color Scheme
                                    </h5>
                                    <div class=""theme-settings-swatches"">
              ");
                WriteLiteral(@"                          <div class=""swatch-holder bg-primary switch-header-cs-class"" data-class=""bg-primary header-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-secondary switch-header-cs-class"" data-class=""bg-secondary header-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-success switch-header-cs-class"" data-class=""bg-success header-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-info switch-header-cs-class"" data-class=""bg-info header-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-warning switch-header-cs-class"" data-class=""bg-warning header-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-danger switch-heade");
                WriteLiteral(@"r-cs-class"" data-class=""bg-danger header-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-light switch-header-cs-class"" data-class=""bg-light header-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-dark switch-header-cs-class"" data-class=""bg-dark header-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-focus switch-header-cs-class"" data-class=""bg-focus header-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-alternate switch-header-cs-class"" data-class=""bg-alternate header-text-light"">
                                        </div>
                                        <div class=""divider"">
                                        </div>
                                        <div class=""swatch-ho");
                WriteLiteral(@"lder bg-vicious-stance switch-header-cs-class"" data-class=""bg-vicious-stance header-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-midnight-bloom switch-header-cs-class"" data-class=""bg-midnight-bloom header-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-night-sky switch-header-cs-class"" data-class=""bg-night-sky header-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-slick-carbon switch-header-cs-class"" data-class=""bg-slick-carbon header-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-asteroid switch-header-cs-class"" data-class=""bg-asteroid header-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-royal switch-head");
                WriteLiteral(@"er-cs-class"" data-class=""bg-royal header-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-warm-flame switch-header-cs-class"" data-class=""bg-warm-flame header-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-night-fade switch-header-cs-class"" data-class=""bg-night-fade header-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-sunny-morning switch-header-cs-class"" data-class=""bg-sunny-morning header-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-tempting-azure switch-header-cs-class"" data-class=""bg-tempting-azure header-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-amy-crisp switch-header-cs-class"" data-class=""bg-amy-cri");
                WriteLiteral(@"sp header-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-heavy-rain switch-header-cs-class"" data-class=""bg-heavy-rain header-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-mean-fruit switch-header-cs-class"" data-class=""bg-mean-fruit header-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-malibu-beach switch-header-cs-class"" data-class=""bg-malibu-beach header-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-deep-blue switch-header-cs-class"" data-class=""bg-deep-blue header-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-ripe-malin switch-header-cs-class"" data-class=""bg-ripe-malin header-text-light"">
                  ");
                WriteLiteral(@"                      </div>
                                        <div class=""swatch-holder bg-arielle-smile switch-header-cs-class"" data-class=""bg-arielle-smile header-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-plum-plate switch-header-cs-class"" data-class=""bg-plum-plate header-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-happy-fisher switch-header-cs-class"" data-class=""bg-happy-fisher header-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-happy-itmeo switch-header-cs-class"" data-class=""bg-happy-itmeo header-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-mixed-hopes switch-header-cs-class"" data-class=""bg-mixed-hopes header-text-light"">
                                        </di");
                WriteLiteral(@"v>
                                        <div class=""swatch-holder bg-strong-bliss switch-header-cs-class"" data-class=""bg-strong-bliss header-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-grow-early switch-header-cs-class"" data-class=""bg-grow-early header-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-love-kiss switch-header-cs-class"" data-class=""bg-love-kiss header-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-premium-dark switch-header-cs-class"" data-class=""bg-premium-dark header-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-happy-green switch-header-cs-class"" data-class=""bg-happy-green header-text-light"">
                                        </div>
                            ");
                WriteLiteral(@"        </div>
                                </li>
                            </ul>
                        </div>
                        <h3 class=""themeoptions-heading"">
                            <div>Sidebar Options</div>
                            <button type=""button"" class=""btn-pill btn-shadow btn-wide ml-auto btn btn-focus btn-sm switch-sidebar-cs-class"" data-class="""">
                                Restore Default
                            </button>
                        </h3>
                        <div class=""p-3"">
                            <ul class=""list-group"">
                                <li class=""list-group-item"">
                                    <h5 class=""pb-2"">Choose Color Scheme
                                    </h5>
                                    <div class=""theme-settings-swatches"">
                                        <div class=""swatch-holder bg-primary switch-sidebar-cs-class"" data-class=""bg-primary sidebar-text-light"">
                                ");
                WriteLiteral(@"        </div>
                                        <div class=""swatch-holder bg-secondary switch-sidebar-cs-class"" data-class=""bg-secondary sidebar-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-success switch-sidebar-cs-class"" data-class=""bg-success sidebar-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-info switch-sidebar-cs-class"" data-class=""bg-info sidebar-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-warning switch-sidebar-cs-class"" data-class=""bg-warning sidebar-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-danger switch-sidebar-cs-class"" data-class=""bg-danger sidebar-text-light"">
                                        </div>
                                        <div class=");
                WriteLiteral(@"""swatch-holder bg-light switch-sidebar-cs-class"" data-class=""bg-light sidebar-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-dark switch-sidebar-cs-class"" data-class=""bg-dark sidebar-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-focus switch-sidebar-cs-class"" data-class=""bg-focus sidebar-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-alternate switch-sidebar-cs-class"" data-class=""bg-alternate sidebar-text-light"">
                                        </div>
                                        <div class=""divider"">
                                        </div>
                                        <div class=""swatch-holder bg-vicious-stance switch-sidebar-cs-class"" data-class=""bg-vicious-stance sidebar-text-light"">
                                        </div");
                WriteLiteral(@">
                                        <div class=""swatch-holder bg-midnight-bloom switch-sidebar-cs-class"" data-class=""bg-midnight-bloom sidebar-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-night-sky switch-sidebar-cs-class"" data-class=""bg-night-sky sidebar-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-slick-carbon switch-sidebar-cs-class"" data-class=""bg-slick-carbon sidebar-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-asteroid switch-sidebar-cs-class"" data-class=""bg-asteroid sidebar-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-royal switch-sidebar-cs-class"" data-class=""bg-royal sidebar-text-light"">
                                        </div>
                               ");
                WriteLiteral(@"         <div class=""swatch-holder bg-warm-flame switch-sidebar-cs-class"" data-class=""bg-warm-flame sidebar-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-night-fade switch-sidebar-cs-class"" data-class=""bg-night-fade sidebar-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-sunny-morning switch-sidebar-cs-class"" data-class=""bg-sunny-morning sidebar-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-tempting-azure switch-sidebar-cs-class"" data-class=""bg-tempting-azure sidebar-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-amy-crisp switch-sidebar-cs-class"" data-class=""bg-amy-crisp sidebar-text-dark"">
                                        </div>
                                        <div class=""s");
                WriteLiteral(@"watch-holder bg-heavy-rain switch-sidebar-cs-class"" data-class=""bg-heavy-rain sidebar-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-mean-fruit switch-sidebar-cs-class"" data-class=""bg-mean-fruit sidebar-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-malibu-beach switch-sidebar-cs-class"" data-class=""bg-malibu-beach sidebar-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-deep-blue switch-sidebar-cs-class"" data-class=""bg-deep-blue sidebar-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-ripe-malin switch-sidebar-cs-class"" data-class=""bg-ripe-malin sidebar-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-arielle-smile ");
                WriteLiteral(@"switch-sidebar-cs-class"" data-class=""bg-arielle-smile sidebar-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-plum-plate switch-sidebar-cs-class"" data-class=""bg-plum-plate sidebar-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-happy-fisher switch-sidebar-cs-class"" data-class=""bg-happy-fisher sidebar-text-dark"">
                                        </div>
                                        <div class=""swatch-holder bg-happy-itmeo switch-sidebar-cs-class"" data-class=""bg-happy-itmeo sidebar-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-mixed-hopes switch-sidebar-cs-class"" data-class=""bg-mixed-hopes sidebar-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-strong-bliss switch-sidebar-cs");
                WriteLiteral(@"-class"" data-class=""bg-strong-bliss sidebar-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-grow-early switch-sidebar-cs-class"" data-class=""bg-grow-early sidebar-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-love-kiss switch-sidebar-cs-class"" data-class=""bg-love-kiss sidebar-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-premium-dark switch-sidebar-cs-class"" data-class=""bg-premium-dark sidebar-text-light"">
                                        </div>
                                        <div class=""swatch-holder bg-happy-green switch-sidebar-cs-class"" data-class=""bg-happy-green sidebar-text-light"">
                                        </div>
                                    </div>
                                </li>
                            </ul>
     ");
                WriteLiteral(@"                   </div>
                        <h3 class=""themeoptions-heading"">
                            <div>Main Content Options</div>
                            <button type=""button"" class=""btn-pill btn-shadow btn-wide ml-auto active btn btn-focus btn-sm"">Restore Default
                            </button>
                        </h3>
                        <div class=""p-3"">
                            <ul class=""list-group"">
                                <li class=""list-group-item"">
                                    <h5 class=""pb-2"">Page Section Tabs
                                    </h5>
                                    <div class=""theme-settings-swatches"">
                                        <div role=""group"" class=""mt-2 btn-group"">
                                            <button type=""button"" class=""btn-wide btn-shadow btn-primary btn btn-secondary switch-theme-class"" data-class=""body-tabs-line"">
                                                Line
                        ");
                WriteLiteral(@"                    </button>
                                            <button type=""button"" class=""btn-wide btn-shadow btn-primary active btn btn-secondary switch-theme-class"" data-class=""body-tabs-shadow"">
                                                Shadow
                                            </button>
                                        </div>
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>        <div class=""app-main"">
                <div class=""app-sidebar sidebar-shadow"">
                    <div class=""app-header__logo"">
                        <div class=""logo-src""></div>
                        <div class=""header__pane ml-auto"">
                            <div>
                                <button type=""button"" class=""hamburger close-sidebar-btn hamburger--elastic"" data-class=""closed-sidebar"">
     ");
                WriteLiteral(@"                               <span class=""hamburger-box"">
                                        <span class=""hamburger-inner""></span>
                                    </span>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class=""app-header__mobile-menu"">
                        <div>
                            <button type=""button"" class=""hamburger hamburger--elastic mobile-toggle-nav"">
                                <span class=""hamburger-box"">
                                    <span class=""hamburger-inner""></span>
                                </span>
                            </button>
                        </div>
                    </div>
                    <div class=""app-header__menu"">
                        <span>
                            <button type=""button"" class=""btn-icon btn-icon-only btn btn-primary btn-sm mobile-toggle-header-nav"">
                              ");
                WriteLiteral(@"  <span class=""btn-icon-wrapper"">
                                    <i class=""fa fa-ellipsis-v fa-w-6""></i>
                                </span>
                            </button>
                        </span>
                    </div>    <div class=""scrollbar-sidebar"">
                        <div class=""app-sidebar__inner"">
                            <ul class=""vertical-nav-menu"">
                                <li class=""app-sidebar__heading"">Dashboards</li>
                                <li>
                                    <a href=""index.html"">
                                        <i class=""metismenu-icon pe-7s-rocket""></i>
                                        Dashboard Example 1
                                    </a>
                                </li>
                                <li class=""app-sidebar__heading"">UI Components</li>
                                <li
                                    
                                    
                                 ");
                WriteLiteral(@"   
                                    
                                    
                                    
                                    
                                    
                                >
                                    <a href=""#"">
                                        <i class=""metismenu-icon pe-7s-diamond""></i>
                                        Elements
                                        <i class=""metismenu-state-icon pe-7s-angle-down caret-left""></i>
                                    </a>
                                    <ul
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                    >
                                        <li>
                     ");
                WriteLiteral(@"                       <a href=""elements-buttons-standard.html"">
                                                <i class=""metismenu-icon""></i>
                                                Buttons
                                            </a>
                                        </li>
                                        <li>
                                            <a href=""elements-dropdowns.html"">
                                                <i class=""metismenu-icon"">
                                                </i>Dropdowns
                                            </a>
                                        </li>
                                        <li>
                                            <a href=""elements-icons.html"">
                                                <i class=""metismenu-icon"">
                                                </i>Icons
                                            </a>
                                        </li>
                         ");
                WriteLiteral(@"               <li>
                                            <a href=""elements-badges-labels.html"">
                                                <i class=""metismenu-icon"">
                                                </i>Badges
                                            </a>
                                        </li>
                                        <li>
                                            <a href=""elements-cards.html"">
                                                <i class=""metismenu-icon"">
                                                </i>Cards
                                            </a>
                                        </li>
                                        <li>
                                            <a href=""elements-list-group.html"">
                                                <i class=""metismenu-icon"">
                                                </i>List Groups
                                            </a>
                               ");
                WriteLiteral(@"         </li>
                                        <li>
                                            <a href=""elements-navigation.html"">
                                                <i class=""metismenu-icon"">
                                                </i>Navigation Menus
                                            </a>
                                        </li>
                                        <li>
                                            <a href=""elements-utilities.html"">
                                                <i class=""metismenu-icon"">
                                                </i>Utilities
                                            </a>
                                        </li>
                                    </ul>
                                </li>
                                <li
                                    
                                    
                                    
                                    
                         ");
                WriteLiteral(@"           
                                    
                                    
                                    
                                    
                                    
                                    
                                >
                                    <a href=""#"">
                                        <i class=""metismenu-icon pe-7s-car""></i>
                                        Components
                                        <i class=""metismenu-state-icon pe-7s-angle-down caret-left""></i>
                                    </a>
                                    <ul
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                    ");
                WriteLiteral(@"                    
                                        
                                    >
                                        <li>
                                            <a href=""components-tabs.html"">
                                                <i class=""metismenu-icon"">
                                                </i>Tabs
                                            </a>
                                        </li>
                                        <li>
                                            <a href=""components-accordions.html"">
                                                <i class=""metismenu-icon"">
                                                </i>Accordions
                                            </a>
                                        </li>
                                        <li>
                                            <a href=""components-notifications.html"">
                                                <i class=""metismenu-icon"">
           ");
                WriteLiteral(@"                                     </i>Notifications
                                            </a>
                                        </li>
                                        <li>
                                            <a href=""components-modals.html"">
                                                <i class=""metismenu-icon"">
                                                </i>Modals
                                            </a>
                                        </li>
                                        <li>
                                            <a href=""components-progress-bar.html"">
                                                <i class=""metismenu-icon"">
                                                </i>Progress Bar
                                            </a>
                                        </li>
                                        <li>
                                            <a href=""components-tooltips-popovers.html"">
                        ");
                WriteLiteral(@"                        <i class=""metismenu-icon"">
                                                </i>Tooltips &amp; Popovers
                                            </a>
                                        </li>
                                        <li>
                                            <a href=""components-carousel.html"">
                                                <i class=""metismenu-icon"">
                                                </i>Carousel
                                            </a>
                                        </li>
                                        <li>
                                            <a href=""components-calendar.html"">
                                                <i class=""metismenu-icon"">
                                                </i>Calendar
                                            </a>
                                        </li>
                                        <li>
                                            <");
                WriteLiteral(@"a href=""components-pagination.html"">
                                                <i class=""metismenu-icon"">
                                                </i>Pagination
                                            </a>
                                        </li>
                                        <li>
                                            <a href=""components-scrollable-elements.html"">
                                                <i class=""metismenu-icon"">
                                                </i>Scrollable
                                            </a>
                                        </li>
                                        <li>
                                            <a href=""components-maps.html"">
                                                <i class=""metismenu-icon"">
                                                </i>Maps
                                            </a>
                                        </li>
                                    <");
                WriteLiteral(@"/ul>
                                </li>
                                <li  >
                                    <a href=""tables-regular.html"">
                                        <i class=""metismenu-icon pe-7s-display2""></i>
                                        Tables
                                    </a>
                                </li>
                                <li class=""app-sidebar__heading"">Widgets</li>
                                <li>
                                    <a href=""dashboard-boxes.html"">
                                        <i class=""metismenu-icon pe-7s-display2""></i>
                                        Dashboard Boxes
                                    </a>
                                </li>
                                <li class=""app-sidebar__heading"">Forms</li>
                                <li>
                                    <a href=""forms-controls.html"" class=""mm-active"">
                                        <i class=""metismenu-i");
                WriteLiteral(@"con pe-7s-mouse"">
                                        </i>Forms Controls
                                    </a>
                                </li>
                                <li>
                                    <a href=""forms-layouts.html"">
                                        <i class=""metismenu-icon pe-7s-eyedropper"">
                                        </i>Forms Layouts
                                    </a>
                                </li>
                                <li>
                                    <a href=""forms-validation.html"">
                                        <i class=""metismenu-icon pe-7s-pendrive"">
                                        </i>Forms Validation
                                    </a>
                                </li>
                                <li class=""app-sidebar__heading"">Charts</li>
                                <li>
                                    <a href=""charts-chartjs.html"">
                                   ");
                WriteLiteral(@"     <i class=""metismenu-icon pe-7s-graph2"">
                                        </i>ChartJS
                                    </a>
                                </li>
                                <li class=""app-sidebar__heading"">PRO Version</li>
                                <li>
                                    <a href=""https://dashboardpack.com/theme-details/architectui-dashboard-html-pro/"" target=""_blank"">
                                        <i class=""metismenu-icon pe-7s-graph2"">
                                        </i>
                                        Upgrade to PRO
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>    <div class=""app-main__outer"">
                    <div class=""app-main__inner"">
                        <div class=""app-page-title"">
                            <div class=""page-title-wrapper"">
                       ");
                WriteLiteral(@"         <div class=""page-title-heading"">
                                    <div class=""page-title-icon"">
                                        <i class=""pe-7s-display1 icon-gradient bg-premium-dark"">
                                        </i>
                                    </div>
                                    <div>Form Controls
                                        <div class=""page-title-subheading"">Wide selection of forms controls, using the Bootstrap 4 code base, but built with React.
                                        </div>
                                    </div>
                                </div>
                                <div class=""page-title-actions"">
                                    <button type=""button"" data-toggle=""tooltip"" title=""Example Tooltip"" data-placement=""bottom"" class=""btn-shadow mr-3 btn btn-dark"">
                                        <i class=""fa fa-star""></i>
                                    </button>
                                    <di");
                WriteLiteral(@"v class=""d-inline-block dropdown"">
                                        <button type=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"" class=""btn-shadow dropdown-toggle btn btn-info"">
                                            <span class=""btn-icon-wrapper pr-2 opacity-7"">
                                                <i class=""fa fa-business-time fa-w-20""></i>
                                            </span>
                                            Buttons
                                        </button>
                                        <div tabindex=""-1"" role=""menu"" aria-hidden=""true"" class=""dropdown-menu dropdown-menu-right"">
                                            <ul class=""nav flex-column"">
                                                <li class=""nav-item"">
                                                    <a href=""javascript:void(0);"" class=""nav-link"">
                                                        <i class=""nav-link-icon lnr-inbox""></i>
   ");
                WriteLiteral(@"                                                     <span>
                                                            Inbox
                                                        </span>
                                                        <div class=""ml-auto badge badge-pill badge-secondary"">86</div>
                                                    </a>
                                                </li>
                                                <li class=""nav-item"">
                                                    <a href=""javascript:void(0);"" class=""nav-link"">
                                                        <i class=""nav-link-icon lnr-book""></i>
                                                        <span>
                                                            Book
                                                        </span>
                                                        <div class=""ml-auto badge badge-pill badge-danger"">5</div>
                                ");
                WriteLiteral(@"                    </a>
                                                </li>
                                                <li class=""nav-item"">
                                                    <a href=""javascript:void(0);"" class=""nav-link"">
                                                        <i class=""nav-link-icon lnr-picture""></i>
                                                        <span>
                                                            Picture
                                                        </span>
                                                    </a>
                                                </li>
                                                <li class=""nav-item"">
                                                    <a disabled href=""javascript:void(0);"" class=""nav-link disabled"">
                                                        <i class=""nav-link-icon lnr-file-empty""></i>
                                                        <span>
                   ");
                WriteLiteral(@"                                         File Disabled
                                                        </span>
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>    </div>
                        </div>            <ul class=""body-tabs body-tabs-layout tabs-animated body-tabs-animated nav"">
                            <li class=""nav-item"">
                                <a role=""tab"" class=""nav-link active"" id=""tab-0"" data-toggle=""tab"" href=""#tab-content-0"">
                                    <span>Basic</span>
                                </a>
                            </li>
                            <li class=""nav-item"">
                                <a role=""tab"" class=""nav-link"" id=""tab-1"" data-toggle=""tab"" href=""#tab-content-1"">
                       ");
                WriteLiteral(@"             <span>Input Groups</span>
                                </a>
                            </li>
                            <li class=""nav-item"">
                                <a role=""tab"" class=""nav-link"" id=""tab-2"" data-toggle=""tab"" href=""#tab-content-2"">
                                    <span>Custom Controls</span>
                                </a>
                            </li>
                        </ul>
                        <div class=""tab-content"">
                            <div class=""tab-pane tabs-animation fade show active"" id=""tab-content-0"" role=""tabpanel"">
                                <div class=""row"">
                                    <div class=""col-md-6"">
                                        <div class=""main-card mb-3 card"">
                                            <div class=""card-body""><h5 class=""card-title"">Controls Types</h5>
                                                ");
                EndContext();
                BeginContext(50431, 2908, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be8676861806", async() => {
                    BeginContext(50446, 944, true);
                    WriteLiteral(@"
                                                    <div class=""position-relative form-group""><label for=""exampleEmail"" class="""">Email</label><input name=""email"" id=""exampleEmail"" placeholder=""with a placeholder"" type=""email"" class=""form-control""></div>
                                                    <div class=""position-relative form-group""><label for=""examplePassword"" class="""">Password</label><input name=""password"" id=""examplePassword"" placeholder=""password placeholder"" type=""password""
                                                                                                                                                           class=""form-control""></div>
                                                    <div class=""position-relative form-group""><label for=""exampleSelect"" class="""">Select</label><select name=""select"" id=""exampleSelect"" class=""form-control"">
                                                        ");
                    EndContext();
                    BeginContext(51390, 18, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be8676863199", async() => {
                        BeginContext(51398, 1, true);
                        WriteLiteral("1");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(51408, 57, true);
                    WriteLiteral("\n                                                        ");
                    EndContext();
                    BeginContext(51465, 18, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be8676864588", async() => {
                        BeginContext(51473, 1, true);
                        WriteLiteral("2");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(51483, 57, true);
                    WriteLiteral("\n                                                        ");
                    EndContext();
                    BeginContext(51540, 18, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be8676865977", async() => {
                        BeginContext(51548, 1, true);
                        WriteLiteral("3");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(51558, 57, true);
                    WriteLiteral("\n                                                        ");
                    EndContext();
                    BeginContext(51615, 18, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be8676867366", async() => {
                        BeginContext(51623, 1, true);
                        WriteLiteral("4");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(51633, 57, true);
                    WriteLiteral("\n                                                        ");
                    EndContext();
                    BeginContext(51690, 18, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be8676868755", async() => {
                        BeginContext(51698, 1, true);
                        WriteLiteral("5");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(51708, 368, true);
                    WriteLiteral(@"
                                                    </select></div>
                                                    <div class=""position-relative form-group""><label for=""exampleSelectMulti"" class="""">Select Multiple</label><select multiple="""" name=""selectMulti"" id=""exampleSelectMulti"" class=""form-control"">
                                                        ");
                    EndContext();
                    BeginContext(52076, 18, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be8676870470", async() => {
                        BeginContext(52084, 1, true);
                        WriteLiteral("1");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(52094, 57, true);
                    WriteLiteral("\n                                                        ");
                    EndContext();
                    BeginContext(52151, 18, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be8676871859", async() => {
                        BeginContext(52159, 1, true);
                        WriteLiteral("2");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(52169, 57, true);
                    WriteLiteral("\n                                                        ");
                    EndContext();
                    BeginContext(52226, 18, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be8676873248", async() => {
                        BeginContext(52234, 1, true);
                        WriteLiteral("3");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(52244, 57, true);
                    WriteLiteral("\n                                                        ");
                    EndContext();
                    BeginContext(52301, 18, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be8676874637", async() => {
                        BeginContext(52309, 1, true);
                        WriteLiteral("4");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(52319, 57, true);
                    WriteLiteral("\n                                                        ");
                    EndContext();
                    BeginContext(52376, 18, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be8676876026", async() => {
                        BeginContext(52384, 1, true);
                        WriteLiteral("5");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(52394, 938, true);
                    WriteLiteral(@"
                                                    </select></div>
                                                    <div class=""position-relative form-group""><label for=""exampleText"" class="""">Text Area</label><textarea name=""text"" id=""exampleText"" class=""form-control""></textarea></div>
                                                    <div class=""position-relative form-group""><label for=""exampleFile"" class="""">File</label><input name=""file"" id=""exampleFile"" type=""file"" class=""form-control-file"">
                                                        <small class=""form-text text-muted"">This is some placeholder block-level help text for the above input. It's a bit lighter and easily wraps to a new line.</small>
                                                    </div>
                                                    <button class=""mt-1 btn btn-primary"">Submit</button>
                                                ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(53339, 425, true);
                WriteLiteral(@"
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""col-md-6"">
                                        <div class=""main-card mb-3 card"">
                                            <div class=""card-body""><h5 class=""card-title"">Sizing</h5>
                                                ");
                EndContext();
                BeginContext(53764, 1168, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be8676879982", async() => {
                    BeginContext(53779, 678, true);
                    WriteLiteral(@"<input placeholder=""lg"" type=""text"" class=""mb-2 form-control-lg form-control""><input placeholder=""default"" type=""text"" class=""mb-2 form-control""><input placeholder=""sm"" type=""text""
                                                                                                                                                                                                                       class=""mb-2 form-control-sm form-control"">
                                                    <div class=""divider""></div>
                                                    <select class=""mb-2 form-control-lg form-control"">
                                                        ");
                    EndContext();
                    BeginContext(54457, 29, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be8676881087", async() => {
                        BeginContext(54465, 12, true);
                        WriteLiteral("Large Select");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(54486, 153, true);
                    WriteLiteral("\n                                                    </select><select class=\"mb-2 form-control\">\n                                                        ");
                    EndContext();
                    BeginContext(54639, 31, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be8676882588", async() => {
                        BeginContext(54647, 14, true);
                        WriteLiteral("Default Select");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(54670, 164, true);
                    WriteLiteral("\n                                                    </select><select class=\"form-control-sm form-control\">\n                                                        ");
                    EndContext();
                    BeginContext(54834, 29, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be8676884102", async() => {
                        BeginContext(54842, 12, true);
                        WriteLiteral("Small Select");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(54863, 62, true);
                    WriteLiteral("\n                                                    </select>");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(54932, 340, true);
                WriteLiteral(@"
                                            </div>
                                        </div>
                                        <div class=""main-card mb-3 card"">
                                            <div class=""card-body""><h5 class=""card-title"">Checkboxes &amp; Radios</h5>
                                                ");
                EndContext();
                BeginContext(55272, 1349, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be8676887076", async() => {
                    BeginContext(55287, 1327, true);
                    WriteLiteral(@"
                                                    <fieldset class=""position-relative form-group"">
                                                        <div class=""position-relative form-check""><label class=""form-check-label""><input name=""radio1"" type=""radio"" class=""form-check-input""> Option one is this and that—be sure to include why it's great</label>
                                                        </div>
                                                        <div class=""position-relative form-check""><label class=""form-check-label""><input name=""radio1"" type=""radio"" class=""form-check-input""> Option two can be something else and selecting it will deselect option
                                                            one</label></div>
                                                        <div class=""position-relative form-check disabled""><label class=""form-check-label""><input name=""radio1"" disabled="""" type=""radio"" class=""form-check-input""> Option three is disabled</label></div>
           ");
                    WriteLiteral(@"                                         </fieldset>
                                                    <div class=""position-relative form-check""><label class=""form-check-label""><input type=""checkbox"" class=""form-check-input""> Check me out</label></div>
                                                ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(56621, 14949, true);
                WriteLiteral(@"
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""tab-pane tabs-animation fade"" id=""tab-content-1"" role=""tabpanel"">
                                <div class=""row"">
                                    <div class=""col-md-6"">
                                        <div class=""main-card mb-3 card"">
                                            <div class=""card-body""><h5 class=""card-title"">Input Groups</h5>
                                                <div>
                                                    <div class=""input-group"">
                                                        <div class=""input-group-prepend""><span class=""input-group-text""></span></div>
                                                        <input placeholder=""username"" type=""text"" class=""form-control""></div>
                   ");
                WriteLiteral(@"                                 <br>
                                                    <div class=""input-group"">
                                                        <div class=""input-group-prepend""><span class=""input-group-text""><input aria-label=""Checkbox for following text input"" type=""checkbox"" class=""""></span></div>
                                                        <input placeholder=""Check it out"" type=""text"" class=""form-control""></div>
                                                    <br>
                                                    <div class=""input-group""><input placeholder=""username"" type=""text"" class=""form-control"">
                                                        <div class=""input-group-append""><span class=""input-group-text""></span></div>
                                                    </div>
                                                    <br>
                                                    <div class=""input-group"">
                                        ");
                WriteLiteral(@"                <div class=""input-group-prepend""><span class=""input-group-text"">$</span><span class=""input-group-text"">$</span></div>
                                                        <input placeholder=""Dolla dolla billz yo!"" type=""text"" class=""form-control"">
                                                        <div class=""input-group-append""><span class=""input-group-text"">$</span><span class=""input-group-text"">$</span></div>
                                                    </div>
                                                    <br>
                                                    <div class=""input-group"">
                                                        <div class=""input-group-prepend""><span class=""input-group-text"">$</span></div>
                                                        <input placeholder=""Amount"" step=""1"" type=""number"" class=""form-control"">
                                                        <div class=""input-group-append""><span class=""input-group-text"">.00</sp");
                WriteLiteral(@"an></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class=""main-card mb-3 card"">
                                            <div class=""card-body""><h5 class=""card-title"">Input Group Button Dropdown</h5>
                                                <div class=""input-group"">
                                                    <div class=""input-group-prepend"">
                                                        <button type=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"" class=""dropdown-toggle btn btn-secondary"">Button Dropdown</button>
                                                        <div tabindex=""-1"" role=""menu"" aria-hidden=""true"" class=""dropdown-menu""><h6 tabindex=""-1"" class=""dropdown-header"">Header</h6>
                                                    ");
                WriteLiteral(@"        <button type=""button"" disabled="""" tabindex=""-1"" class=""disabled dropdown-item"">Action</button>
                                                            <button type=""button"" tabindex=""0"" class=""dropdown-item"">Another Action</button>
                                                            <div tabindex=""-1"" class=""dropdown-divider""></div>
                                                            <button type=""button"" tabindex=""0"" class=""dropdown-item"">Another Action</button>
                                                        </div>
                                                    </div>
                                                    <input type=""text"" class=""form-control""></div>
                                            </div>
                                        </div>
                                        <div class=""main-card mb-3 card"">
                                            <div class=""card-body""><h5 class=""card-title"">Input Group Button Shorthand</h5>
           ");
                WriteLiteral(@"                                     <div>
                                                    <div class=""input-group"">
                                                        <div class=""input-group-prepend"">
                                                            <button class=""btn btn-secondary"">To the Left!</button>
                                                        </div>
                                                        <input type=""text"" class=""form-control""></div>
                                                    <br>
                                                    <div class=""input-group""><input type=""text"" class=""form-control"">
                                                        <div class=""input-group-append"">
                                                            <button class=""btn btn-secondary"">To the Right!</button>
                                                        </div>
                                                    </div>
                            ");
                WriteLiteral(@"                        <br>
                                                    <div class=""input-group"">
                                                        <div class=""input-group-prepend"">
                                                            <button class=""btn btn-danger"">To the Left!</button>
                                                        </div>
                                                        <input placeholder=""and..."" type=""text"" class=""form-control"">
                                                        <div class=""input-group-append"">
                                                            <button class=""btn btn-success"">To the Right!</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
           ");
                WriteLiteral(@"                         <div class=""col-md-6"">
                                        <div class=""main-card mb-3 card"">
                                            <div class=""card-body""><h5 class=""card-title"">Input Group Sizing</h5>
                                                <div>
                                                    <div class=""input-group input-group-lg"">
                                                        <div class=""input-group-prepend""><span class=""input-group-text"">lg</span></div>
                                                        <input type=""text"" class=""form-control""></div>
                                                    <br>
                                                    <div class=""input-group"">
                                                        <div class=""input-group-prepend""><span class=""input-group-text"">normal</span></div>
                                                        <input type=""text"" class=""form-control""></div>
                        ");
                WriteLiteral(@"                            <br>
                                                    <div class=""input-group input-group-sm"">
                                                        <div class=""input-group-prepend""><span class=""input-group-text"">sm</span></div>
                                                        <input type=""text"" class=""form-control""></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class=""main-card mb-3 card"">
                                            <div class=""card-body""><h5 class=""card-title"">Input Group Addon</h5>
                                                <div>
                                                    <div class=""input-group"">
                                                        <div class=""input-group-prepend""><span class=""input-group-text"">To the Left!</span></div>
                                         ");
                WriteLiteral(@"               <input type=""text"" class=""form-control""></div>
                                                    <br>
                                                    <div class=""input-group""><input type=""text"" class=""form-control"">
                                                        <div class=""input-group-append""><span class=""input-group-text"">To the Right!</span></div>
                                                    </div>
                                                    <br>
                                                    <div class=""input-group"">
                                                        <div class=""input-group-prepend""><span class=""input-group-text"">To the Left!</span></div>
                                                        <input placeholder=""and..."" type=""text"" class=""form-control"">
                                                        <div class=""input-group-append""><span class=""input-group-text"">To the Right!</span></div>
                                     ");
                WriteLiteral(@"               </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class=""main-card mb-3 card"">
                                            <div class=""card-body""><h5 class=""card-title"">Input Group Button</h5>
                                                <div>
                                                    <div class=""input-group"">
                                                        <div class=""input-group-prepend"">
                                                            <button class=""btn btn-secondary"">I'm a button</button>
                                                        </div>
                                                        <input type=""text"" class=""form-control""></div>
                                                    <br>
                                                    <div class=""input-group""><input type=""text"" clas");
                WriteLiteral(@"s=""form-control"">
                                                        <div class=""input-group-append"">
                                                            <button type=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"" class=""dropdown-toggle btn btn-secondary"">Button Dropdown</button>
                                                            <div tabindex=""-1"" role=""menu"" aria-hidden=""true"" class=""dropdown-menu""><h6 tabindex=""-1"" class=""dropdown-header"">Header</h6>
                                                                <button type=""button"" disabled="""" tabindex=""-1"" class=""disabled dropdown-item"">Action</button>
                                                                <button type=""button"" tabindex=""0"" class=""dropdown-item"">Another Action</button>
                                                                <div tabindex=""-1"" class=""dropdown-divider""></div>
                                                                <button type=""button"" tabindex=""0");
                WriteLiteral(@""" class=""dropdown-item"">Another Action</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <br>
                                                    <div class=""input-group"">
                                                        <div class=""input-group-prepend"">
                                                            <button class=""btn btn-outline-secondary"">Split Button</button>
                                                            <button type=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"" class=""dropdown-toggle dropdown-toggle-split btn btn-outline-secondary""><span
                                                                    class=""sr-only"">Toggle Dropdown</span></button>
                                                            <div tabindex=""-1"" role=""menu"" aria-");
                WriteLiteral(@"hidden=""true"" class=""dropdown-menu""><h6 tabindex=""-1"" class=""dropdown-header"">Header</h6>
                                                                <button type=""button"" disabled="""" tabindex=""-1"" class=""disabled dropdown-item"">Action</button>
                                                                <button type=""button"" tabindex=""0"" class=""dropdown-item"">Another Action</button>
                                                                <div tabindex=""-1"" class=""dropdown-divider""></div>
                                                                <button type=""button"" tabindex=""0"" class=""dropdown-item"">Another Action</button>
                                                            </div>
                                                        </div>
                                                        <input placeholder=""and..."" type=""text"" class=""form-control"">
                                                        <div class=""input-group-append"">
                                 ");
                WriteLiteral(@"                           <button class=""btn btn-secondary"">I'm a button</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""tab-pane tabs-animation fade"" id=""tab-content-2"" role=""tabpanel"">
                                ");
                EndContext();
                BeginContext(71570, 10482, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768105987", async() => {
                    BeginContext(71585, 5853, true);
                    WriteLiteral(@"
                                    <div class=""row"">
                                        <div class=""col-md-6"">
                                            <div class=""main-card mb-3 card"">
                                                <div class=""card-body""><h5 class=""card-title"">Checkboxes</h5>
                                                    <div class=""position-relative form-group"">
                                                        <div>
                                                            <div class=""custom-checkbox custom-control""><input type=""checkbox"" id=""exampleCustomCheckbox"" class=""custom-control-input""><label class=""custom-control-label"" for=""exampleCustomCheckbox"">Check this
                                                                custom checkbox</label></div>
                                                            <div class=""custom-checkbox custom-control""><input type=""checkbox"" id=""exampleCustomCheckbox2"" class=""custom-control-input""><label class=""custom-cont");
                    WriteLiteral(@"rol-label"" for=""exampleCustomCheckbox2"">Or this
                                                                one</label></div>
                                                            <div class=""custom-checkbox custom-control""><input type=""checkbox"" id=""exampleCustomCheckbox3"" disabled="""" class=""custom-control-input""><label class=""custom-control-label"" for=""exampleCustomCheckbox3"">But
                                                                not this disabled one</label></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""main-card mb-3 card"">
                                                <div class=""card-body""><h5 class=""card-title"">Inline</h5>
                                                    <div class=""position-relative form-group"">
                      ");
                    WriteLiteral(@"                                  <div>
                                                            <div class=""custom-checkbox custom-control custom-control-inline""><input type=""checkbox"" id=""exampleCustomInline"" class=""custom-control-input""><label class=""custom-control-label""
                                                                                                                                                                                                                  for=""exampleCustomInline"">An inline custom
                                                                input</label></div>
                                                            <div class=""custom-checkbox custom-control custom-control-inline""><input type=""checkbox"" id=""exampleCustomInline2"" class=""custom-control-input""><label class=""custom-control-label""
                                                                                                                                                                        ");
                    WriteLiteral(@"                                           for=""exampleCustomInline2"">and another one</label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class=""col-md-6"">
                                            <div class=""main-card mb-3 card"">
                                                <div class=""card-body""><h5 class=""card-title"">Radios</h5>
                                                    <div class=""position-relative form-group"">
                                                        <div>
                                                            <div class=""custom-radio custom-control""><input type=""radio"" id=""exampleCustomRadio"" name=""customRadio"" class=""custom-contro");
                    WriteLiteral(@"l-input""><label class=""custom-control-label"" for=""exampleCustomRadio"">Select
                                                                this custom radio</label></div>
                                                            <div class=""custom-radio custom-control""><input type=""radio"" id=""exampleCustomRadio2"" name=""customRadio"" class=""custom-control-input""><label class=""custom-control-label"" for=""exampleCustomRadio2"">Or
                                                                this one</label></div>
                                                            <div class=""custom-radio custom-control""><input type=""radio"" id=""exampleCustomRadio3"" disabled="""" class=""custom-control-input""><label class=""custom-control-label"" for=""exampleCustomRadio3"">But not this
                                                                disabled one</label></div>
                                                        </div>
                                                    </div>
                              ");
                    WriteLiteral(@"                  </div>
                                            </div>
                                            <div class=""main-card mb-3 card"">
                                                <div class=""card-body""><h5 class=""card-title"">Form Select</h5>
                                                    <div class=""row"">
                                                        <div class=""col-md-6"">
                                                            <div class=""position-relative form-group""><label for=""exampleCustomSelect"" class="""">Custom Select</label><select type=""select"" id=""exampleCustomSelect"" name=""customSelect"" class=""custom-select"">
                                                                ");
                    EndContext();
                    BeginContext(77438, 32, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768112605", async() => {
                        BeginContext(77455, 6, true);
                        WriteLiteral("Select");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(77470, 65, true);
                    WriteLiteral("\n                                                                ");
                    EndContext();
                    BeginContext(77535, 24, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768114225", async() => {
                        BeginContext(77543, 7, true);
                        WriteLiteral("Value 1");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(77559, 65, true);
                    WriteLiteral("\n                                                                ");
                    EndContext();
                    BeginContext(77624, 24, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768115629", async() => {
                        BeginContext(77632, 7, true);
                        WriteLiteral("Value 2");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(77648, 65, true);
                    WriteLiteral("\n                                                                ");
                    EndContext();
                    BeginContext(77713, 24, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768117033", async() => {
                        BeginContext(77721, 7, true);
                        WriteLiteral("Value 3");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(77737, 65, true);
                    WriteLiteral("\n                                                                ");
                    EndContext();
                    BeginContext(77802, 24, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768118437", async() => {
                        BeginContext(77810, 7, true);
                        WriteLiteral("Value 4");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(77826, 65, true);
                    WriteLiteral("\n                                                                ");
                    EndContext();
                    BeginContext(77891, 24, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768119841", async() => {
                        BeginContext(77899, 7, true);
                        WriteLiteral("Value 5");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(77915, 623, true);
                    WriteLiteral(@"
                                                            </select></div>
                                                            <div class=""position-relative form-group""><label for=""exampleCustomMutlipleSelect"" class="""">Custom Multiple Select</label><select multiple="""" type=""select"" id=""exampleCustomMutlipleSelect""
                                                                                                                                                                                              name=""customSelect"" class=""custom-select"">
                                                                ");
                    EndContext();
                    BeginContext(78538, 32, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768121820", async() => {
                        BeginContext(78555, 6, true);
                        WriteLiteral("Select");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(78570, 65, true);
                    WriteLiteral("\n                                                                ");
                    EndContext();
                    BeginContext(78635, 24, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768123440", async() => {
                        BeginContext(78643, 7, true);
                        WriteLiteral("Value 1");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(78659, 65, true);
                    WriteLiteral("\n                                                                ");
                    EndContext();
                    BeginContext(78724, 24, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768124844", async() => {
                        BeginContext(78732, 7, true);
                        WriteLiteral("Value 2");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(78748, 65, true);
                    WriteLiteral("\n                                                                ");
                    EndContext();
                    BeginContext(78813, 24, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768126248", async() => {
                        BeginContext(78821, 7, true);
                        WriteLiteral("Value 3");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(78837, 65, true);
                    WriteLiteral("\n                                                                ");
                    EndContext();
                    BeginContext(78902, 24, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768127652", async() => {
                        BeginContext(78910, 7, true);
                        WriteLiteral("Value 4");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(78926, 65, true);
                    WriteLiteral("\n                                                                ");
                    EndContext();
                    BeginContext(78991, 24, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768129056", async() => {
                        BeginContext(78999, 7, true);
                        WriteLiteral("Value 5");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(79015, 765, true);
                    WriteLiteral(@"
                                                            </select></div>
                                                        </div>
                                                        <div class=""col-md-6"">
                                                            <div class=""position-relative form-group""><label for=""exampleCustomSelectDisabled"" class="""">Custom Select Disabled</label><select type=""select"" id=""exampleCustomSelectDisabled"" name=""customSelect""
                                                                                                                                                                                              disabled="""" class=""custom-select"">
                                                                ");
                    EndContext();
                    BeginContext(79780, 32, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768131179", async() => {
                        BeginContext(79797, 6, true);
                        WriteLiteral("Select");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(79812, 65, true);
                    WriteLiteral("\n                                                                ");
                    EndContext();
                    BeginContext(79877, 24, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768132799", async() => {
                        BeginContext(79885, 7, true);
                        WriteLiteral("Value 1");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(79901, 65, true);
                    WriteLiteral("\n                                                                ");
                    EndContext();
                    BeginContext(79966, 24, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768134203", async() => {
                        BeginContext(79974, 7, true);
                        WriteLiteral("Value 2");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(79990, 65, true);
                    WriteLiteral("\n                                                                ");
                    EndContext();
                    BeginContext(80055, 24, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768135607", async() => {
                        BeginContext(80063, 7, true);
                        WriteLiteral("Value 3");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(80079, 65, true);
                    WriteLiteral("\n                                                                ");
                    EndContext();
                    BeginContext(80144, 24, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768137011", async() => {
                        BeginContext(80152, 7, true);
                        WriteLiteral("Value 4");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(80168, 65, true);
                    WriteLiteral("\n                                                                ");
                    EndContext();
                    BeginContext(80233, 24, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768138415", async() => {
                        BeginContext(80241, 7, true);
                        WriteLiteral("Value 5");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(80257, 884, true);
                    WriteLiteral(@"
                                                            </select></div>
                                                            <div class=""position-relative form-group""><label for=""exampleCustomMutlipleSelectDisabled"" class="""">Custom Multiple Select Disabled</label><select multiple="""" type=""select""
                                                                                                                                                                                                               id=""exampleCustomMutlipleSelectDisabled""
                                                                                                                                                                                                               name=""customSelect"" disabled="""" class=""custom-select"">
                                                                ");
                    EndContext();
                    BeginContext(81141, 32, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768140657", async() => {
                        BeginContext(81158, 6, true);
                        WriteLiteral("Select");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(81173, 65, true);
                    WriteLiteral("\n                                                                ");
                    EndContext();
                    BeginContext(81238, 24, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768142277", async() => {
                        BeginContext(81246, 7, true);
                        WriteLiteral("Value 1");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(81262, 65, true);
                    WriteLiteral("\n                                                                ");
                    EndContext();
                    BeginContext(81327, 24, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768143681", async() => {
                        BeginContext(81335, 7, true);
                        WriteLiteral("Value 2");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(81351, 65, true);
                    WriteLiteral("\n                                                                ");
                    EndContext();
                    BeginContext(81416, 24, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768145085", async() => {
                        BeginContext(81424, 7, true);
                        WriteLiteral("Value 3");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(81440, 65, true);
                    WriteLiteral("\n                                                                ");
                    EndContext();
                    BeginContext(81505, 24, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768146489", async() => {
                        BeginContext(81513, 7, true);
                        WriteLiteral("Value 4");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(81529, 65, true);
                    WriteLiteral("\n                                                                ");
                    EndContext();
                    BeginContext(81594, 24, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768147893", async() => {
                        BeginContext(81602, 7, true);
                        WriteLiteral("Value 5");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(81618, 427, true);
                    WriteLiteral(@"
                                                            </select></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(82052, 2240, true);
                WriteLiteral(@"
                            </div>
                        </div>
                    </div>
                    <div class=""app-wrapper-footer"">
                        <div class=""app-footer"">
                            <div class=""app-footer__inner"">
                                <div class=""app-footer-left"">
                                    <ul class=""nav"">
                                        <li class=""nav-item"">
                                            <a href=""javascript:void(0);"" class=""nav-link"">
                                                Footer Link 1
                                            </a>
                                        </li>
                                        <li class=""nav-item"">
                                            <a href=""javascript:void(0);"" class=""nav-link"">
                                                Footer Link 2
                                            </a>
                                        </li>
                               ");
                WriteLiteral(@"     </ul>
                                </div>
                                <div class=""app-footer-right"">
                                    <ul class=""nav"">
                                        <li class=""nav-item"">
                                            <a href=""javascript:void(0);"" class=""nav-link"">
                                                Footer Link 3
                                            </a>
                                        </li>
                                        <li class=""nav-item"">
                                            <a href=""javascript:void(0);"" class=""nav-link"">
                                                <div class=""badge badge-success mr-1 ml-0"">
                                                    <small>NEW</small>
                                                </div>
                                                Footer Link 4
                                            </a>
                                        </li>
                  ");
                WriteLiteral("                  </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>    </div>\n        </div>\n    </div>\n");
                EndContext();
                BeginContext(84292, 59, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f79abd400991c765bb9dd32e54968057be86768153239", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(84358, 9, true);
            WriteLiteral("\n</html>\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
